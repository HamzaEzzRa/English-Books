{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amine\\\\Desktop\\\\Projet JEE\\\\Frontend\\\\titsuite\\\\src\\\\App.js\";\nimport LandingPage from './components/Landing';\nimport navBar from './components/NavBar';\nimport LandingPage2 from './components/LandingPage';\nimport Login from './components/Login';\nimport SignUp from './components/SignUp';\nimport Dashboard from './components/Dashboard';\nimport { Route, BrowserRouter as Router, Switch, Link } from \"react-router-dom\";\nimport Landing from './components/Landing';\nimport Portfeuille from './components/Portfeuille';\nimport MesAnnonces from './components/MesAnnonces';\nimport Profile from './components/Profile';\nimport { React, Component } from 'react';\nimport UnauthGuard from './components/UnauthGuard';\nimport AuthGuard from './components/AuthGuard';\nimport CustomerProfile from './components/CustomerProfile';\nimport CustomerDashboard from './components/CustomerDashboard';\nimport CustomerHistorique from './components/CustomerHistorique';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.expiresIn = 10 * 1000;\n    this.refreshTimer = null;\n    this.callTimeout = null;\n\n    this.authenticate = () => {\n      this.setState({\n        isAuthenticated: true\n      });\n      localStorage.setItem(\"isAuthCheck\", \"\");\n      localStorage.setItem(\"expiryTime\", Date.now() + this.expiresIn);\n      this.setAutoLoginInterval();\n    };\n\n    this.logout = () => {\n      this.setState({\n        isAuthenticated: false\n      });\n      clearTimeout(this.callTimeout);\n      clearInterval(this.refreshTimer);\n      localStorage.removeItem(\"isAuthCheck\");\n      localStorage.removeItem(\"expiryTime\");\n    };\n\n    this.autoLoginCallback = key => {\n      const requestOptions = {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      fetch('/Titsuite-1.0-SNAPSHOT/api/users/refreshToken', requestOptions).then(res => res.json()).then(data => {\n        console.log(data);\n        localStorage.setItem(key, Date.now() + this.expiresIn);\n      });\n    };\n\n    this.setAutoLoginInterval = () => {\n      const key = 'expiryTime';\n      const now = Date.now();\n      const expiryTime = localStorage.getItem(key);\n\n      const executeCallback = () => {\n        this.autoLoginCallback(key);\n      };\n\n      if (expiryTime != null) {\n        // User is logged in\n        if (now >= expiryTime) {\n          // User has been away longer than expiryTime, log him out\n          localStorage.removeItem(key);\n          this.logout();\n        } else {\n          // Execute callback when we reach the next interval\n          this.callTimeout = setTimeout(() => {\n            this.refreshTimer = setInterval(executeCallback, this.expiresIn);\n            executeCallback();\n          }, expiryTime - now);\n        }\n      }\n    };\n\n    this.state = {\n      isAuthenticated: false\n    };\n    const auth = localStorage.getItem(\"isAuthCheck\");\n    if (auth != null) this.state.isAuthenticated = true;\n  }\n\n  componentDidMount() {\n    this.setAutoLoginInterval();\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.callTimeout);\n    clearInterval(this.refreshTimer);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(\"switch\", {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            exact: true,\n            component: LandingPage2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(AuthGuard, {\n            path: \"/dashboard\",\n            auth: this.state.isAuthenticated,\n            rest: {\n              logout: this.logout\n            },\n            component: Dashboard\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(AuthGuard, {\n            path: \"/customer/dashboard\",\n            auth: this.state.isAuthenticated,\n            rest: {\n              logout: this.logout\n            },\n            component: CustomerDashboard\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(AuthGuard, {\n            path: \"/portfeuille\",\n            auth: this.state.isAuthenticated,\n            rest: {\n              logout: this.logout\n            },\n            component: Portfeuille\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(AuthGuard, {\n            path: \"/customer/historique\",\n            auth: this.state.isAuthenticated,\n            rest: {\n              logout: this.logout\n            },\n            component: CustomerHistorique\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(UnauthGuard, {\n            path: \"/signup\",\n            auth: this.state.isAuthenticated,\n            component: SignUp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(UnauthGuard, {\n            path: \"/login\",\n            auth: this.state.isAuthenticated,\n            rest: {\n              authenticate: this.authenticate\n            },\n            component: Login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(AuthGuard, {\n            path: \"/freelancer/profile\",\n            auth: this.state.isAuthenticated,\n            rest: {\n              logout: this.logout\n            },\n            component: Profile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(AuthGuard, {\n            path: \"/customer/profile\",\n            auth: this.state.isAuthenticated,\n            rest: {\n              logout: this.logout\n            },\n            component: CustomerProfile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(AuthGuard, {\n            path: \"/annonces\",\n            auth: this.state.isAuthenticated,\n            rest: {\n              logout: this.logout\n            },\n            component: MesAnnonces\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/amine/Desktop/Projet JEE/Frontend/titsuite/src/App.js"],"names":["LandingPage","navBar","LandingPage2","Login","SignUp","Dashboard","Route","BrowserRouter","Router","Switch","Link","Landing","Portfeuille","MesAnnonces","Profile","React","Component","UnauthGuard","AuthGuard","CustomerProfile","CustomerDashboard","CustomerHistorique","App","constructor","expiresIn","refreshTimer","callTimeout","authenticate","setState","isAuthenticated","localStorage","setItem","Date","now","setAutoLoginInterval","logout","clearTimeout","clearInterval","removeItem","autoLoginCallback","key","requestOptions","method","headers","fetch","then","res","json","data","console","log","expiryTime","getItem","executeCallback","setTimeout","setInterval","state","auth","componentDidMount","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,WAAP,MAAwB,sBAAxB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAAQC,KAAR,EAAeC,aAAa,IAAIC,MAAhC,EAAwCC,MAAxC,EAAgDC,IAAhD,QAA2D,kBAA3D;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AACA,OAAOC,kBAAP,MAA+B,iCAA/B;;AAEA,eAAe,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAGzCO,EAAAA,WAAW,GAAG;AACZ;AADY,SAFdC,SAEc,GAFF,KAAK,IAEH;AAAA,SAmBdC,YAnBc,GAmBC,IAnBD;AAAA,SAoBdC,WApBc,GAoBA,IApBA;;AAAA,SAsBdC,YAtBc,GAsBC,MAAM;AACnB,WAAKC,QAAL,CAAc;AACZC,QAAAA,eAAe,EAAE;AADL,OAAd;AAGAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoC,EAApC;AACAD,MAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCC,IAAI,CAACC,GAAL,KAAa,KAAKT,SAArD;AACA,WAAKU,oBAAL;AACD,KA7Ba;;AAAA,SA+BdC,MA/Bc,GA+BL,MAAM;AACb,WAAKP,QAAL,CAAc;AACZC,QAAAA,eAAe,EAAE;AADL,OAAd;AAGAO,MAAAA,YAAY,CAAC,KAAKV,WAAN,CAAZ;AACAW,MAAAA,aAAa,CAAC,KAAKZ,YAAN,CAAb;AACAK,MAAAA,YAAY,CAACQ,UAAb,CAAwB,aAAxB;AACAR,MAAAA,YAAY,CAACQ,UAAb,CAAwB,YAAxB;AACD,KAvCa;;AAAA,SAyCdC,iBAzCc,GAyCOC,GAAD,IAAS;AAC3B,YAAMC,cAAc,GAAG;AACrBC,QAAAA,MAAM,EAAE,KADa;AAErBC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB;AAFY,OAAvB;AAIAC,MAAAA,KAAK,CAAC,+CAAD,EAAkDH,cAAlD,CAAL,CAAuEI,IAAvE,CAA4EC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAnF,EAA+FF,IAA/F,CAAqGG,IAAD,IAAU;AAC5GC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAlB,QAAAA,YAAY,CAACC,OAAb,CAAqBS,GAArB,EAA0BR,IAAI,CAACC,GAAL,KAAa,KAAKT,SAA5C;AACD,OAHD;AAID,KAlDa;;AAAA,SAoDdU,oBApDc,GAoDS,MAAM;AAC3B,YAAMM,GAAG,GAAG,YAAZ;AACA,YAAMP,GAAG,GAAGD,IAAI,CAACC,GAAL,EAAZ;AACA,YAAMkB,UAAU,GAAGrB,YAAY,CAACsB,OAAb,CAAqBZ,GAArB,CAAnB;;AACA,YAAMa,eAAe,GAAG,MAAM;AAC5B,aAAKd,iBAAL,CAAuBC,GAAvB;AACD,OAFD;;AAGA,UAAIW,UAAU,IAAI,IAAlB,EAAwB;AAAE;AACxB,YAAIlB,GAAG,IAAIkB,UAAX,EAAuB;AAAE;AACvBrB,UAAAA,YAAY,CAACQ,UAAb,CAAwBE,GAAxB;AACA,eAAKL,MAAL;AACD,SAHD,MAIK;AAAE;AACL,eAAKT,WAAL,GAAmB4B,UAAU,CAAC,MAAM;AAClC,iBAAK7B,YAAL,GAAoB8B,WAAW,CAACF,eAAD,EAAkB,KAAK7B,SAAvB,CAA/B;AACA6B,YAAAA,eAAe;AAChB,WAH4B,EAG1BF,UAAU,GAAGlB,GAHa,CAA7B;AAID;AACF;AACF,KAvEa;;AAEZ,SAAKuB,KAAL,GAAa;AACX3B,MAAAA,eAAe,EAAE;AADN,KAAb;AAGA,UAAM4B,IAAI,GAAG3B,YAAY,CAACsB,OAAb,CAAqB,aAArB,CAAb;AACA,QAAIK,IAAI,IAAI,IAAZ,EACE,KAAKD,KAAL,CAAW3B,eAAX,GAA6B,IAA7B;AACH;;AAED6B,EAAAA,iBAAiB,GAAG;AAClB,SAAKxB,oBAAL;AACD;;AAEDyB,EAAAA,oBAAoB,GAAG;AACrBvB,IAAAA,YAAY,CAAC,KAAKV,WAAN,CAAZ;AACAW,IAAAA,aAAa,CAAC,KAAKZ,YAAN,CAAb;AACD;;AAwDDmC,EAAAA,MAAM,GAAE;AACN,wBACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BAGE,QAAC,MAAD;AAAA,+BACE;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,GAAZ;AAAgB,YAAA,KAAK,MAArB;AAAsB,YAAA,SAAS,EAAE1D;AAAjC;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,SAAD;AAAW,YAAA,IAAI,EAAC,YAAhB;AAA6B,YAAA,IAAI,EAAE,KAAKsD,KAAL,CAAW3B,eAA9C;AAAgE,YAAA,IAAI,EAAE;AAACM,cAAAA,MAAM,EAAE,KAAKA;AAAd,aAAtE;AAA6F,YAAA,SAAS,EAAE9B;AAAxG;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE,QAAC,SAAD;AAAW,YAAA,IAAI,EAAC,qBAAhB;AAAsC,YAAA,IAAI,EAAE,KAAKmD,KAAL,CAAW3B,eAAvD;AAAyE,YAAA,IAAI,EAAE;AAACM,cAAAA,MAAM,EAAE,KAAKA;AAAd,aAA/E;AAAsG,YAAA,SAAS,EAAEf;AAAjH;AAAA;AAAA;AAAA;AAAA,kBALF,eAME,QAAC,SAAD;AAAW,YAAA,IAAI,EAAC,cAAhB;AAA+B,YAAA,IAAI,EAAE,KAAKoC,KAAL,CAAW3B,eAAhD;AAAkE,YAAA,IAAI,EAAE;AAACM,cAAAA,MAAM,EAAE,KAAKA;AAAd,aAAxE;AAA+F,YAAA,SAAS,EAAEvB;AAA1G;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE,QAAC,SAAD;AAAW,YAAA,IAAI,EAAC,sBAAhB;AAAuC,YAAA,IAAI,EAAE,KAAK4C,KAAL,CAAW3B,eAAxD;AAA0E,YAAA,IAAI,EAAE;AAACM,cAAAA,MAAM,EAAE,KAAKA;AAAd,aAAhF;AAAuG,YAAA,SAAS,EAAEd;AAAlH;AAAA;AAAA;AAAA;AAAA,kBAPF,eAWE,QAAC,WAAD;AAAa,YAAA,IAAI,EAAC,SAAlB;AAA4B,YAAA,IAAI,EAAE,KAAKmC,KAAL,CAAW3B,eAA7C;AAA8D,YAAA,SAAS,EAAEzB;AAAzE;AAAA;AAAA;AAAA;AAAA,kBAXF,eAYE,QAAC,WAAD;AAAa,YAAA,IAAI,EAAC,QAAlB;AAA2B,YAAA,IAAI,EAAE,KAAKoD,KAAL,CAAW3B,eAA5C;AAA6D,YAAA,IAAI,EAAE;AAACF,cAAAA,YAAY,EAAE,KAAKA;AAApB,aAAnE;AAAsG,YAAA,SAAS,EAAExB;AAAjH;AAAA;AAAA;AAAA;AAAA,kBAZF,eAaE,QAAC,SAAD;AAAW,YAAA,IAAI,EAAC,qBAAhB;AAAsC,YAAA,IAAI,EAAE,KAAKqD,KAAL,CAAW3B,eAAvD;AAAwE,YAAA,IAAI,EAAE;AAACM,cAAAA,MAAM,EAAE,KAAKA;AAAd,aAA9E;AAAqG,YAAA,SAAS,EAAErB;AAAhH;AAAA;AAAA;AAAA;AAAA,kBAbF,eAcE,QAAC,SAAD;AAAW,YAAA,IAAI,EAAC,mBAAhB;AAAoC,YAAA,IAAI,EAAE,KAAK0C,KAAL,CAAW3B,eAArD;AAAsE,YAAA,IAAI,EAAE;AAACM,cAAAA,MAAM,EAAE,KAAKA;AAAd,aAA5E;AAAmG,YAAA,SAAS,EAAEhB;AAA9G;AAAA;AAAA;AAAA;AAAA,kBAdF,eAgBE,QAAC,SAAD;AAAW,YAAA,IAAI,EAAC,WAAhB;AAA4B,YAAA,IAAI,EAAE,KAAKqC,KAAL,CAAW3B,eAA7C;AAA8D,YAAA,IAAI,EAAE;AAACM,cAAAA,MAAM,EAAE,KAAKA;AAAd,aAApE;AAA2F,YAAA,SAAS,EAAEtB;AAAtG;AAAA;AAAA;AAAA;AAAA,kBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,YADA;AA0BD;;AAvGwC","sourcesContent":["import LandingPage from './components/Landing';\nimport navBar from './components/NavBar';\n\nimport LandingPage2 from './components/LandingPage'\nimport Login from './components/Login'\nimport SignUp from './components/SignUp';\nimport Dashboard from './components/Dashboard';\nimport {Route, BrowserRouter as Router, Switch, Link} from \"react-router-dom\"\nimport Landing from './components/Landing';\nimport Portfeuille from './components/Portfeuille';\nimport MesAnnonces from './components/MesAnnonces';\nimport Profile from './components/Profile';\nimport { React, Component } from 'react';\nimport UnauthGuard from './components/UnauthGuard';\nimport AuthGuard from './components/AuthGuard';\nimport CustomerProfile from './components/CustomerProfile'\nimport CustomerDashboard from './components/CustomerDashboard';\nimport CustomerHistorique from './components/CustomerHistorique';\n\nexport default class App extends Component {\n  expiresIn = 10 * 1000;\n  \n  constructor() {\n    super();\n    this.state = {\n      isAuthenticated: false,\n    };\n    const auth = localStorage.getItem(\"isAuthCheck\");\n    if (auth != null)\n      this.state.isAuthenticated = true;\n  }\n\n  componentDidMount() {\n    this.setAutoLoginInterval();\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.callTimeout);\n    clearInterval(this.refreshTimer);\n  }\n\n  refreshTimer = null;\n  callTimeout = null;\n\n  authenticate = () => {\n    this.setState({\n      isAuthenticated: true\n    });\n    localStorage.setItem(\"isAuthCheck\", \"\");\n    localStorage.setItem(\"expiryTime\", Date.now() + this.expiresIn);\n    this.setAutoLoginInterval();\n  }\n\n  logout = () => {\n    this.setState({\n      isAuthenticated: false\n    });\n    clearTimeout(this.callTimeout);\n    clearInterval(this.refreshTimer);\n    localStorage.removeItem(\"isAuthCheck\");\n    localStorage.removeItem(\"expiryTime\");\n  }\n\n  autoLoginCallback = (key) => {\n    const requestOptions = {\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' }\n    };\n    fetch('/Titsuite-1.0-SNAPSHOT/api/users/refreshToken', requestOptions).then(res => res.json()).then((data) => {\n      console.log(data);\n      localStorage.setItem(key, Date.now() + this.expiresIn);\n    });\n  }\n\n  setAutoLoginInterval = () => {\n    const key = 'expiryTime';\n    const now = Date.now();\n    const expiryTime = localStorage.getItem(key);\n    const executeCallback = () => {\n      this.autoLoginCallback(key);\n    };\n    if (expiryTime != null) { // User is logged in\n      if (now >= expiryTime) { // User has been away longer than expiryTime, log him out\n        localStorage.removeItem(key);\n        this.logout();\n      }\n      else { // Execute callback when we reach the next interval\n        this.callTimeout = setTimeout(() => {\n          this.refreshTimer = setInterval(executeCallback, this.expiresIn);\n          executeCallback();\n        }, expiryTime - now);\n      }\n    }\n  }\n\n  render(){\n    return (\n    <div className=\"App\">\n      \n\n      <Router>\n        <switch>\n          <Route path=\"/\" exact component={LandingPage2}/>\n          {/* <Route path=\"/login\" component={Login} />\n          <Route path=\"/signup\" component={SignUp} /> */}\n          <AuthGuard path=\"/dashboard\" auth={this.state.isAuthenticated}  rest={{logout: this.logout}} component={Dashboard} />\n          <AuthGuard path=\"/customer/dashboard\" auth={this.state.isAuthenticated}  rest={{logout: this.logout}} component={CustomerDashboard} />\n          <AuthGuard path=\"/portfeuille\" auth={this.state.isAuthenticated}  rest={{logout: this.logout}} component={Portfeuille} />\n          <AuthGuard path=\"/customer/historique\" auth={this.state.isAuthenticated}  rest={{logout: this.logout}} component={CustomerHistorique} /> \n          {/* <Route path=\"/annonces\" component={MesAnnonces}/>\n          <Route path=\"/freelancer/profile\" component={Profile} /> */}\n\n          <UnauthGuard path=\"/signup\" auth={this.state.isAuthenticated} component={SignUp} />\n          <UnauthGuard path=\"/login\" auth={this.state.isAuthenticated} rest={{authenticate: this.authenticate}} component={Login} />\n          <AuthGuard path=\"/freelancer/profile\" auth={this.state.isAuthenticated} rest={{logout: this.logout}} component={Profile} />\n          <AuthGuard path=\"/customer/profile\" auth={this.state.isAuthenticated} rest={{logout: this.logout}} component={CustomerProfile} />\n          \n          <AuthGuard path=\"/annonces\" auth={this.state.isAuthenticated} rest={{logout: this.logout}} component={MesAnnonces} />\n        </switch>\n      </Router>\n    </div>\n  );\n  }\n  \n}\n\n"]},"metadata":{},"sourceType":"module"}